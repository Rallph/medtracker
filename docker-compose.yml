version: '3.9'
networks:
  development:
volumes:
  gem_cache:
services:
  rails_app:
    build: . # builds the image specified in the Dockerfile in this directory
    container_name: rails_app
    volumes:
      - .:/var/app # mounts this directory (source code root directory) to the /var/app directory in the container
      - gem_cache:/usr/local/bundle/gems # puts installed gems in the gem_cache volume so the image doesnt need to be rebuilt every time dependencies change
    network_mode: host # host network mode makes it so that all ports opened in the container are also opened on the host
    # this can be a security issue if the image is deployed directly, however we are only using docker for the development
    # environment, so it is not an issue in our case
    stdin_open: true # stdin_open and tty allow an interactive shell to be attached to the container
    tty: true
    entrypoint: entrypoint.sh # executes the entrypoint script on container start
    command: ['rails', 'server', '-p', '3000', '-b', '0.0.0.0'] # starts the rails server on container start after entrypoint
    environment:
      RAILS_ENV: development # sets the RAILS_ENV environment variable in the container
    